syntax = "proto3";

package task.v1;

option go_package = "task";

import "google/api/annotations.proto";
import "task-api/messages.proto";

service AuthService {
    // Einloggen
    rpc Login (CredentialsRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
			post: "/auth"
			body: "credentials"
		};
    }
}

service TaskService {

    // Erstellen eines Tasks
    rpc CreateTask (CreateTaskRequest) returns (TaskEntity) {
        option (google.api.http) = {
			post: "/tasks"
			body: "item"
		};
    }

    // Laden eines Tasks
    rpc GetTask (GetTaskRequest) returns (TaskEntity) {
        option (google.api.http) = {
			get: "/tasks/{id}"
		};
    }

    // Laden aller Tasks. Es werden per default 23 Tasks pro Page gezeigt.
    rpc ListTask (ListTaskRequest) returns (TaskCollection) {
        option (google.api.http) = {
			get: "/tasks"
		};
    }

    // Einen Task l√∂schen.
    rpc DeleteTask (DeleteTaskRequest) returns (DeleteTaskResponse) {
        option (google.api.http) = {
			delete: "/tasks/{id}"
		};
    }

    // Inhalt eines Tasks aktualisieren. Es werden nur gelieferte Felder aktualisiert. Ist eigentlich ein PATCH
    rpc UpdateTask (UpdateTaskRequest) returns (TaskEntity) {
        option (google.api.http) = {
			put: "/tasks/{id}"
			body: "item"
		};
    }

    // Benutzerdefinierte Methode um einen Task als abgeschlossen zu setzen.
    rpc CompleteTask (GetTaskRequest) returns (TaskEntity) {
        option (google.api.http) = {
			post: "/tasks/{id}:complete"
		};
    }
}